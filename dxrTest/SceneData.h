#ifndef SCENE_DATA_H
#define SCENE_DATA_H

#include "Shared.h"

// front face and back face normals need doublecheck
const Vertex boxVertices[] = {
  // front face
  {{-0.5f, 0.5f,-0.5f, 1.0f}, { 0.0f, 0.0f,-1.0f, 0.0f}, {0.0f, 0.0f}},
  {{ 0.5f,-0.5f,-0.5f, 1.0f}, { 0.0f, 0.0f,-1.0f, 0.0f}, {1.0f, 1.0f}},
  {{-0.5f,-0.5f,-0.5f, 1.0f}, { 0.0f, 0.0f,-1.0f, 0.0f}, {0.0f, 1.0f}},
  {{ 0.5f, 0.5f,-0.5f, 1.0f}, { 0.0f, 0.0f,-1.0f, 0.0f}, {1.0f, 0.0f}},

  // right side face
  {{ 0.5f,-0.5f,-0.5f, 1.0f}, { 1.0f, 0.0f, 0.0f, 0.0f}, {0.0f, 1.0f}},
  {{ 0.5f, 0.5f, 0.5f, 1.0f}, { 1.0f, 0.0f, 0.0f, 0.0f}, {1.0f, 0.0f}},
  {{ 0.5f,-0.5f, 0.5f, 1.0f}, { 1.0f, 0.0f, 0.0f, 0.0f}, {1.0f, 1.0f}},
  {{ 0.5f, 0.5f,-0.5f, 1.0f}, { 1.0f, 0.0f, 0.0f, 0.0f}, {0.0f, 0.0f}},

  // left side face
  {{-0.5f, 0.5f, 0.5f, 1.0f}, {-1.0f, 0.0f, 0.0f, 0.0f}, {0.0f, 0.0f}},
  {{-0.5f,-0.5f,-0.5f, 1.0f}, {-1.0f, 0.0f, 0.0f, 0.0f}, {1.0f, 1.0f}},
  {{-0.5f,-0.5f, 0.5f, 1.0f}, {-1.0f, 0.0f, 0.0f, 0.0f}, {0.0f, 1.0f}},
  {{-0.5f, 0.5f,-0.5f, 1.0f}, {-1.0f, 0.0f, 0.0f, 0.0f}, {1.0f, 0.0f}},

  // back face
  {{ 0.5f, 0.5f, 0.5f, 1.0f}, { 0.0f, 0.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},
  {{-0.5f,-0.5f, 0.5f, 1.0f}, { 0.0f, 0.0f, 1.0f, 0.0f}, {1.0f, 1.0f}},
  {{ 0.5f,-0.5f, 0.5f, 1.0f}, { 0.0f, 0.0f, 1.0f, 0.0f}, {0.0f, 1.0f}},
  {{-0.5f, 0.5f, 0.5f, 1.0f}, { 0.0f, 0.0f, 1.0f, 0.0f}, {1.0f, 0.0f}},

  // top face
  {{-0.5f, 0.5f,-0.5f, 1.0f}, { 0.0f,-1.0f, 0.0f, 0.0f}, {0.0f, 1.0f}},
  {{ 0.5f, 0.5f, 0.5f, 1.0f}, { 0.0f,-1.0f, 0.0f, 0.0f}, {1.0f, 0.0f}},
  {{ 0.5f, 0.5f,-0.5f, 1.0f}, { 0.0f,-1.0f, 0.0f, 0.0f}, {1.0f, 1.0f}},
  {{-0.5f, 0.5f, 0.5f, 1.0f}, { 0.0f,-1.0f, 0.0f, 0.0f}, {0.0f, 0.0f}},

  // bottom face
  {{ 0.5f,-0.5f, 0.5f, 1.0f}, { 0.0f, 1.0f, 0.0f, 0.0f}, {0.0f, 0.0f}},
  {{-0.5f,-0.5f,-0.5f, 1.0f}, { 0.0f, 1.0f, 0.0f, 0.0f}, {1.0f, 1.0f}},
  {{ 0.5f,-0.5f,-0.5f, 1.0f}, { 0.0f, 1.0f, 0.0f, 0.0f}, {0.0f, 1.0f}},
  {{-0.5f,-0.5f, 0.5f, 1.0f}, { 0.0f, 1.0f, 0.0f, 0.0f}, {1.0f, 0.0f}},
};

// a cube
const uint32_t boxIndices[] = {
  // front face
  0, 1, 2, // first triangle
  0, 3, 1, // second triangle

  // left face
  4, 5, 6, // first triangle
  4, 7, 5, // second triangle

  // right face
  8, 9, 10, // first triangle
  8, 11, 9, // second triangle

  // back face
  12, 13, 14, // first triangle
  12, 15, 13, // second triangle

  // top face
  16, 17, 18, // first triangle
  16, 19, 17, // second triangle

  // bottom face
  20, 21, 22, // first triangle
  20, 23, 21, // second triangle
};

const size_t boxVerticesCount = _countof(boxVertices);
const size_t boxIndicesCount = _countof(boxIndices);

const size_t boxVerticesSize = boxVerticesCount * sizeof(Vertex);
const size_t boxIndicesSize = boxIndicesCount * sizeof(uint32_t);

// что то не понятное происходит с нормалями!!!
const Vertex planeVertices[] = {
  {{ 10.0f, 1.0f,  10.0f, 1.0f}, {0.0f, 1.0f, 0.0f, 0.0f}, {0.0f, 0.0f}},
  {{-10.0f, 1.0f,  10.0f, 1.0f}, {0.0f, 1.0f, 0.0f, 0.0f}, {1.0f, 0.0f}},
  {{ 10.0f, 1.0f, -10.0f, 1.0f}, {0.0f, 1.0f, 0.0f, 0.0f}, {0.0f, 1.0f}},
  {{-10.0f, 1.0f, -10.0f, 1.0f}, {0.0f, 1.0f, 0.0f, 0.0f}, {1.0f, 1.0f}}
};

const uint32_t planeIndices[] = {
  0, 1, 2,
  3, 2, 1 //1, 2, 3
};

const size_t planeVerticesCount = _countof(planeVertices);
const size_t planeIndicesCount = _countof(planeIndices);

const size_t planeVerticesSize = planeVerticesCount * sizeof(Vertex);
const size_t planeIndicesSize = planeIndicesCount * sizeof(uint32_t);

//const Vertex icosahedronVertices[] = {
//  {{ 0.0f, -0.525731f,  0.850651f, 1.0f}, {}, {}}, // 1
//  {{ 0.850651f,  0.0f,  0.525731f, 1.0f}, {}, {}}, // 2
//  {{ 0.850651f,  0.0f, -0.525731f, 1.0f}, {}, {}}, // 3
//
//  {{-0.850651f,  0.0f, -0.525731f, 1.0f}, {}, {}}, // 4
//  {{-0.850651f,  0.0f,  0.525731f, 1.0f}, {}, {}}, // 5
//  {{-0.525731f,  0.850651f,  0.0f, 1.0f}, {}, {}}, // 6
//
//  {{ 0.525731f,  0.850651f,  0.0f, 1.0f}, {}, {}}, // 7
//  {{ 0.525731f, -0.850651f,  0.0f, 1.0f}, {}, {}}, // 8
//  {{-0.525731f, -0.850651f,  0.0f, 1.0f}, {}, {}}, // 9
//
//  {{ 0.0f, -0.525731f, -0.850651f, 1.0f}, {}, {}}, // 10
//  {{ 0.0f,  0.525731f, -0.850651f, 1.0f}, {}, {}}, // 11
//  {{ 0.0f,  0.525731f,  0.850651f, 1.0f}, {}, {}}  // 12
//};

const Vertex icosahedronVertices[] = {
  {{ 0.850651f,  0.0f,  0.525731f, 1.0f}, { 0.934172f, -0.356822f,  0.0f, 0.0f}, {}}, // face 1
  {{ 0.850651f,  0.0f, -0.525731f, 1.0f}, { 0.934172f, -0.356822f,  0.0f, 0.0f}, {}},
  {{ 0.525731f,  0.850651f,  0.0f, 1.0f}, { 0.934172f, -0.356822f,  0.0f, 0.0f}, {}},

  {{ 0.850651f,  0.0f,  0.525731f, 1.0f}, { 0.934172f,  0.356822f,  0.0f, 0.0f}, {}}, // face 2
  {{ 0.525731f, -0.850651f,  0.0f, 1.0f}, { 0.934172f,  0.356822f,  0.0f, 0.0f}, {}},
  {{ 0.850651f,  0.0f, -0.525731f, 1.0f}, { 0.934172f,  0.356822f,  0.0f, 0.0f}, {}},

  {{-0.850651f,  0.0f, -0.525731f, 1.0f}, {-0.934172f, -0.356822f,  0.0f, 0.0f}, {}}, // face 3
  {{-0.850651f,  0.0f,  0.525731f, 1.0f}, {-0.934172f, -0.356822f,  0.0f, 0.0f}, {}},
  {{-0.525731f,  0.850651f,  0.0f, 1.0f}, {-0.934172f, -0.356822f,  0.0f, 0.0f}, {}},

  {{-0.850651f,  0.0f,  0.525731f, 1.0f}, {-0.934172f,  0.356822f,  0.0f, 0.0f}, {}}, // face 4
  {{-0.850651f,  0.0f, -0.525731f, 1.0f}, {-0.934172f,  0.356822f,  0.0f, 0.0f}, {}},
  {{-0.525731f, -0.850651f,  0.0f, 1.0f}, {-0.934172f,  0.356822f,  0.0f, 0.0f}, {}},

  {{ 0.525731f,  0.850651f,  0.0f, 1.0f}, { 0.0f, -0.934172f,  0.356822f, 0.0f}, {}}, // face 5
  {{-0.525731f,  0.850651f,  0.0f, 1.0f}, { 0.0f, -0.934172f,  0.356822f, 0.0f}, {}},
  {{ 0.0f,  0.525731f,  0.850651f, 1.0f}, { 0.0f, -0.934172f,  0.356822f, 0.0f}, {}},

  {{-0.525731f,  0.850651f,  0.0f, 1.0f}, { 0.0f, -0.934172f, -0.356822f, 0.0f}, {}}, // face 6
  {{ 0.525731f,  0.850651f,  0.0f, 1.0f}, { 0.0f, -0.934172f, -0.356822f, 0.0f}, {}},
  {{ 0.0f,  0.525731f, -0.850651f, 1.0f}, { 0.0f, -0.934172f, -0.356822f, 0.0f}, {}},

  {{ 0.0f, -0.525731f, -0.850651f, 1.0f}, { 0.356822f,  0.0f, -0.934172f, 0.0f}, {}}, // face 7
  {{ 0.0f,  0.525731f, -0.850651f, 1.0f}, { 0.356822f,  0.0f, -0.934172f, 0.0f}, {}},
  {{ 0.850651f,  0.0f, -0.525731f, 1.0f}, { 0.356822f,  0.0f, -0.934172f, 0.0f}, {}},

  {{ 0.0f,  0.525731f, -0.850651f, 1.0f}, {-0.356822f,  0.0f, -0.934172f, 0.0f}, {}}, // face 8
  {{ 0.0f, -0.525731f, -0.850651f, 1.0f}, {-0.356822f,  0.0f, -0.934172f, 0.0f}, {}},
  {{-0.850651f,  0.0f, -0.525731f, 1.0f}, {-0.356822f,  0.0f, -0.934172f, 0.0f}, {}},

  {{ 0.525731f, -0.850651f,  0.0f, 1.0f}, { 0.0f,  0.934172f, -0.356822f, 0.0f}, {}}, // face 9
  {{-0.525731f, -0.850651f,  0.0f, 1.0f}, { 0.0f,  0.934172f, -0.356822f, 0.0f}, {}},
  {{ 0.0f, -0.525731f, -0.850651f, 1.0f}, { 0.0f,  0.934172f, -0.356822f, 0.0f}, {}},

  {{-0.525731f, -0.850651f,  0.0f, 1.0f}, { 0.0f,  0.934172f,  0.356822f, 0.0f}, {}}, // face 10
  {{ 0.525731f, -0.850651f,  0.0f, 1.0f}, { 0.0f,  0.934172f,  0.356822f, 0.0f}, {}},
  {{ 0.0f, -0.525731f,  0.850651f, 1.0f}, { 0.0f,  0.934172f,  0.356822f, 0.0f}, {}},

  {{ 0.0f,  0.525731f,  0.850651f, 1.0f}, { 0.356822f,  0.0f,  0.934172f, 0.0f}, {}}, // face 11
  {{ 0.0f, -0.525731f,  0.850651f, 1.0f}, { 0.356822f,  0.0f,  0.934172f, 0.0f}, {}},
  {{ 0.850651f,  0.0f,  0.525731f, 1.0f}, { 0.356822f,  0.0f,  0.934172f, 0.0f}, {}},

  {{ 0.0f, -0.525731f,  0.850651f, 1.0f}, {-0.356822f,  0.0f,  0.934172f, 0.0f}, {}}, // face 12
  {{ 0.0f,  0.525731f,  0.850651f, 1.0f}, {-0.356822f,  0.0f,  0.934172f, 0.0f}, {}},
  {{-0.850651f,  0.0f,  0.525731f, 1.0f}, {-0.356822f,  0.0f,  0.934172f, 0.0f}, {}},

  {{ 0.525731f,  0.850651f,  0.0f, 1.0f}, { 0.577350f, -0.577350f, -0.577350f, 0.0f}, {}}, // face 13
  {{ 0.850651f,  0.0f, -0.525731f, 1.0f}, { 0.577350f, -0.577350f, -0.577350f, 0.0f}, {}},
  {{ 0.0f,  0.525731f, -0.850651f, 1.0f}, { 0.577350f, -0.577350f, -0.577350f, 0.0f}, {}},

  {{ 0.850651f,  0.0f,  0.525731f, 1.0f}, { 0.577350f, -0.577350f,  0.577350f, 0.0f}, {}}, // face 14
  {{ 0.525731f,  0.850651f,  0.0f, 1.0f}, { 0.577350f, -0.577350f,  0.577350f, 0.0f}, {}},
  {{ 0.0f,  0.525731f,  0.850651f, 1.0f}, { 0.577350f, -0.577350f,  0.577350f, 0.0f}, {}},

  {{-0.850651f,  0.0f, -0.525731f, 1.0f}, {-0.577350f, -0.577350f, -0.577350f, 0.0f}, {}}, // face 15
  {{-0.525731f,  0.850651f,  0.0f, 1.0f}, {-0.577350f, -0.577350f, -0.577350f, 0.0f}, {}},
  {{ 0.0f,  0.525731f, -0.850651f, 1.0f}, {-0.577350f, -0.577350f, -0.577350f, 0.0f}, {}},

  {{-0.525731f,  0.850651f,  0.0f, 1.0f}, {-0.577350f, -0.577350f,  0.577350f, 0.0f}, {}}, // face 16
  {{-0.850651f,  0.0f,  0.525731f, 1.0f}, {-0.577350f, -0.577350f,  0.577350f, 0.0f}, {}},
  {{ 0.0f,  0.525731f,  0.850651f, 1.0f}, {-0.577350f, -0.577350f,  0.577350f, 0.0f}, {}},

  {{ 0.850651f,  0.0f, -0.525731f, 1.0f}, { 0.577350f,  0.577350f, -0.577350f, 0.0f}, {}}, // face 17
  {{ 0.525731f, -0.850651f,  0.0f, 1.0f}, { 0.577350f,  0.577350f, -0.577350f, 0.0f}, {}},
  {{ 0.0f, -0.525731f, -0.850651f, 1.0f}, { 0.577350f,  0.577350f, -0.577350f, 0.0f}, {}},

  {{ 0.525731f, -0.850651f,  0.0f, 1.0f}, { 0.577350f,  0.577350f,  0.577350f, 0.0f}, {}}, // face 18
  {{ 0.850651f,  0.0f,  0.525731f, 1.0f}, { 0.577350f,  0.577350f,  0.577350f, 0.0f}, {}},
  {{ 0.0f, -0.525731f,  0.850651f, 1.0f}, { 0.577350f,  0.577350f,  0.577350f, 0.0f}, {}},

  {{-0.850651f,  0.0f, -0.525731f, 1.0f}, {-0.577350f,  0.577350f, -0.577350f, 0.0f}, {}}, // face 19
  {{ 0.0f, -0.525731f, -0.850651f, 1.0f}, {-0.577350f,  0.577350f, -0.577350f, 0.0f}, {}},
  {{-0.525731f, -0.850651f,  0.0f, 1.0f}, {-0.577350f,  0.577350f, -0.577350f, 0.0f}, {}},

  {{-0.850651f,  0.0f,  0.525731f, 1.0f}, {-0.577350f,  0.577350f,  0.577350f, 0.0f}, {}}, // face 20
  {{-0.525731f, -0.850651f,  0.0f, 1.0f}, {-0.577350f,  0.577350f,  0.577350f, 0.0f}, {}},
  {{ 0.0f, -0.525731f,  0.850651f, 1.0f}, {-0.577350f,  0.577350f,  0.577350f, 0.0f}, {}}
};

const uint32_t icosahedronIndices[] = {
   0,  1,  2, // 1
   3,  4,  5, // 2
   6,  7,  8, // 3

   9, 10, 11, // 4
  12, 13, 14, // 5
  15, 16, 17, // 6

  18, 19, 20, // 7
  21, 22, 23, // 8
  24, 25, 26, // 9

  27, 28, 29, // 10
  30, 31, 32, // 11
  33, 34, 35, // 12

  36, 37, 38, // 13
  39, 40, 41, // 14
  42, 43, 44, // 15

  45, 46, 47, // 16
  48, 49, 50, // 17
  51, 52, 53, // 18

  54, 55, 56, // 19
  57, 58, 59  // 20

  /*2, 3, 7,
  2, 8, 3,
  4, 5, 6,

  5, 4, 9,
  7, 6, 12,
  6, 7, 11,

  10, 11, 3,
  11, 10, 4,
  8, 9, 10,

  9, 8, 1,
  12, 1, 2,
  1, 12, 5,

  7, 3, 11,
  2, 7, 12,
  4, 6, 11,

  6, 5, 12,
  3, 8, 10,
  8, 2, 1,

  4, 10, 9,
  5, 9, 1*/
};

const size_t icosahedronVerticesCount = _countof(icosahedronVertices);
const size_t icosahedronIndicesCount = _countof(icosahedronIndices);

const size_t icosahedronVerticesSize = icosahedronVerticesCount * sizeof(Vertex);
const size_t icosahedronIndicesSize = icosahedronIndicesCount * sizeof(uint32_t);

const Vertex coneVertices[] = {
  {{-1.0f,       1.0f,  0.0f,      1.0f}, {-0.883f,  -0.2943f, -0.3657f, 0.0f}, {}}, // face 1
  {{ 0.0f,      -1.0f,  0.0f,      1.0f}, {-0.883f,  -0.2943f, -0.3657f, 0.0f}, {}},
  {{-0.707107f,  1.0f, -0.707107f, 1.0f}, {-0.883f,  -0.2943f, -0.3657f, 0.0f}, {}},

  {{ 0.0f,       1.0f, -1.0f,      1.0f}, { 0.3657f, -0.2943f, -0.883f,  0.0f}, {}}, // face 2
  {{ 0.0f,      -1.0f,  0.0f,      1.0f}, { 0.3657f, -0.2943f, -0.883f,  0.0f}, {}},
  {{ 0.707107f,  1.0f, -0.707107f, 1.0f}, { 0.3657f, -0.2943f, -0.883f,  0.0f}, {}},

  {{-0.707107f,  1.0f,  0.707107f, 1.0f}, {-0.883f,  -0.2943f,  0.3657f, 0.0f}, {}}, // face 3
  {{ 0.0f,      -1.0f,  0.0f,      1.0f}, {-0.883f,  -0.2943f,  0.3657f, 0.0f}, {}},
  {{-1.0f,       1.0f,  0.0f,      1.0f}, {-0.883f,  -0.2943f,  0.3657f, 0.0f}, {}},

  {{-0.0f,       1.0f,  1.0f,      1.0f}, {-0.3657f, -0.2943,   0.883f,  0.0f}, {}}, // face 4
  {{ 0.0f,      -1.0f,  0.0f,      1.0f}, {-0.3657f, -0.2943,   0.883f,  0.0f}, {}},
  {{-0.707107f,  1.0f,  0.707107f, 1.0f}, {-0.3657f, -0.2943,   0.883f,  0.0f}, {}},

  {{ 0.707107f,  1.0f,  0.707107f, 1.0f}, { 0.3657f, -0.2943f,  0.883f,  0.0f}, {}}, // face 5
  {{ 0.0f,      -1.0f,  0.0f,      1.0f}, { 0.3657f, -0.2943f,  0.883f,  0.0f}, {}},
  {{-0.0f,       1.0f,  1.0f,      1.0f}, { 0.3657f, -0.2943f,  0.883f,  0.0f}, {}},

  {{ 1.0f,       1.0f,  0.0f,      1.0f}, { 0.883f,  -0.2943f, 0.3657f,  0.0f}, {}}, // face 6
  {{ 0.0f,      -1.0f,  0.0f,      1.0f}, { 0.883f,  -0.2943f, 0.3657f,  0.0f}, {}},
  {{ 0.707107f,  1.0f,  0.707107f, 1.0f}, { 0.883f,  -0.2943f, 0.3657f,  0.0f}, {}},

  {{-0.707107f,  1.0f, -0.707107f, 1.0f}, {-0.3657f, -0.2943f, -0.883f,  0.0f}, {}}, // face 7
  {{ 0.0f,      -1.0f,  0.0f,      1.0f}, {-0.3657f, -0.2943f, -0.883f,  0.0f}, {}},
  {{ 0.0f,       1.0f, -1.0f,      1.0f}, {-0.3657f, -0.2943f, -0.883f,  0.0f}, {}},

  {{ 0.707107f,  1.0f, -0.707107f, 1.0f}, { 0.883f,  -0.2943f, -0.3657f, 0.0f}, {}}, // face 8
  {{ 0.0f,      -1.0f,  0.0f,      1.0f}, { 0.883f,  -0.2943f, -0.3657f, 0.0f}, {}},
  {{ 1.0f,       1.0f,  0.0f,      1.0f}, { 0.883f,  -0.2943f, -0.3657f, 0.0f}, {}},

  // cone floor
  {{ 0.0f,       1.0f, -1.0f,      1.0f}, { 0.0f, 1.0f, 0.0f, 0.0f}, {}}, // 24
  {{ 0.707107f,  1.0f, -0.707107f, 1.0f}, { 0.0f, 1.0f, 0.0f, 0.0f}, {}}, // 25
  {{ 1.0f,       1.0f,  0.0f,      1.0f}, { 0.0f, 1.0f, 0.0f, 0.0f}, {}}, // 26
  {{ 0.707107f,  1.0f,  0.707107f, 1.0f}, { 0.0f, 1.0f, 0.0f, 0.0f}, {}}, // 27
  {{ 0.0f,       1.0f,  1.0f,      1.0f}, { 0.0f, 1.0f, 0.0f, 0.0f}, {}}, // 28
  {{-0.707107f,  1.0f,  0.707107f, 1.0f}, { 0.0f, 1.0f, 0.0f, 0.0f}, {}}, // 29
  {{-1.0f,       1.0f,  0.0f,      1.0f}, { 0.0f, 1.0f, 0.0f, 0.0f}, {}}, // 30
  {{-0.707107f,  1.0f, -0.707107f, 1.0f}, { 0.0f, 1.0f, 0.0f, 0.0f}, {}}, // 31
};

const uint32_t coneIndices[] = {
  2, 1, 0,
  5, 4, 3,
  8, 7, 6,

  11, 10,  9,
  14, 13, 12,
  17, 16, 15,

  20, 19, 18,
  23, 22, 21,

  // floor
  26, 25, 24,
  27, 26, 24,
  28, 27, 24,

  29, 28, 24,
  30, 29, 24,
  31, 30, 24,

  25, 31, 24

  /*0, 1, 2,
  3, 4, 5,
  6, 7, 8,

  9, 10, 11,
  12, 13, 14,
  15, 16, 17,

  18, 19, 20,
  21, 22, 23,

  24, 25, 26,
  24, 26, 27,
  24, 27, 28,

  24, 28, 29,
  24, 29, 30,
  24, 30, 31*/
};

const size_t coneVerticesCount = _countof(coneVertices);
const size_t coneIndicesCount = _countof(coneIndices);

const size_t coneVerticesSize = coneVerticesCount * sizeof(Vertex);
const size_t coneIndicesSize = coneIndicesCount * sizeof(uint32_t);

#endif